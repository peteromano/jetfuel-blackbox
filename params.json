{"body":"Currently, BlackBox is a boilerplate client-side application framework, built on top of the JetFuel build system and Grunt, Backbone, RequireJS, JetRunner unit test server (Mocha BDD/TDD test framework + PhantomJS + SauceLabs cloud integration), Dust (and Plate Django port) for templating (both client and server-side), Sass, Express dynamic web server, etc.\r\n\r\nBlackBox is the template used for JetFuel's basic `init` command.\r\n\r\nYou can, of course, use BlackBox as a standalone boilerplate front-end application, but it's meant to be used with the JetFuel build engine...\r\n\r\n### System Requirements\r\n* Node/NPM\r\n* JetFuel (https://github.com/peteromano/jetfuel)\r\n* PhantomJS (http://phantomjs.org/)\r\n* Compass (http://compass-style.org/)\r\n\r\n### Installing JetFuel\r\n`$ sudo npm install -g jetfuel` (as with all things Unix, if you're \"root\" user, you should disregard the `sudo` part)\r\n\r\n### Running the BlackBox Application\r\n`$ jetfuel init myproject`  \r\n`$ cd myproject`  \r\n`$ npm install` (installs Express and Dust server dependencies)  \r\n`$ jetfuel` (performs a full build* of the project)  \r\n`$ npm start` (starts the Express web server at the default port `3000`)\r\n\r\n\\* A \"full build\" includes linting (jshint) source code, installing/upgrading third-party vendor libraries (Jam), documentation of source code (JSDoc), auto-minifying production code, auto-concatenating directories, unit testing (JetRunner), compiling Sass files, and deploying (rsync). Check out `myproject/config/tasks.json` for a list of all JetFuel ready tasks.\r\n\r\n### Notes\r\n* As of version 2.2.x, if the JetRunner unit test server hangs, simply run `jetfuel no-test` to bypass JetRunner unit testing (I'm working on this).\r\n* Utility scripts reside under the `bin` folder as shortcuts for building the project and running the server.\r\n* Third-party library dependencies are defined in `myproject/config/vendor.json`, and are managed by the Jam (http://jamjs.org/) package manager.\r\n* Code documentation provided by JSDoc 2.x (http://code.google.com/p/jsdoc-toolkit/).\r\n* Browse around the `myproject/config` directory and `myproject/.jetfuel.json` to learn how to further tweak the build system.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"BlackBox","tagline":"The client-side application framework for JetFuel","google":""}